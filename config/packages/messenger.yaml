framework:
    messenger:
        # serializer:
        #     default_serializer: App\Messenger\CelerySerializer

        # failure_transport: dead_letter_amqp # Name of your failure transport

        transports:
            # Define a dedicated transport for dead-letter messages
            dead_letter_amqp:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                serializer: messenger.transport.symfony_serializer
                options:
                    exchange:
                        name: dead_letter_exchange
                        type: topic
                    queues:
                        dead_letter_queue:
                            binding_keys: ["#"]

            submission_amqp:
                # dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                dsn: phpamqplib://guest:guest@rabbitmq:5672/%2f
                failure_transport: null
                # Celery Seriliazer
                # serializer: App\Messenger\CelerySerializer
                serializer: messenger.transport.symfony_serializer
                retry_strategy:
                    max_retries: 0
                    delay: 1000
                    multiplier: 2
                    max_delay: 0
                # retry_strategy:
                #     max_retries: 0
                options:
                    confirm_enabled: false
                    prefetch_count: 50
                    exchange:
                        name: submission_exchange
                        type: direct
                    queues:
                        submission_low_priority_queue:
                            binding_keys: [low_priority_submission]
                            arguments:
                                "x-max-priority": "%app.messenger.max_priority%"
                                # "x-dead-letter-exchange": "dead_letter_exchange" # Point to your DLX
                                # "x-dead-letter-routing-key": "submission.low_priority.dead" # Specific routing key for DLQ
                        submission_high_priority_queue:
                            binding_keys: [high_priority_submission]
                            arguments:
                                "x-max-priority": "%app.messenger.max_priority%"
                                # "x-dead-letter-exchange": "dead_letter_exchange"
                                # "x-dead-letter-routing-key": "submission.high_priority.dead"

            competition_status_amqp:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                serializer: messenger.transport.symfony_serializer
                failure_transport: dead_letter_amqp
                retry_strategy:
                    max_retries: 60
                    delay: 1000
                    multiplier: 1
                    max_delay: 1000
                options:
                    exchange:
                        name: delayed_competition_status_exchange
                        type: x-delayed-message
                        arguments:
                            x-delayed-type: direct
                    queues:
                        competition_status_queue:
                            binding_keys: [competition_status]
                            arguments:
                                # "x-dead-letter-exchange": "dead_letter_exchange"
                                # "x-dead-letter-routing-key": "competition_status.dead"
                        competition_winner_generation_queue:
                            binding_keys: [winner_trigger]
                            arguments:
                                # "x-dead-letter-exchange": "dead_letter_exchange"
                                # "x-dead-letter-routing-key": "winner_trigger.dead"
                # prefetch_count: 100
                #     auto_setup: false
                # retry_strategy:
                #     max_retries: 3
                #     delay: 1000

            email_verification_amqp:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                serializer: messenger.transport.symfony_serializer
                failure_transport: dead_letter_amqp 
                retry_strategy:
                    max_retries: 3
                    delay: 1000
                    multiplier: 2
                    max_delay: 0
                options:
                    exchange:
                        name: email_exchange # Use the same email exchange
                        type: direct
                    queues:
                        email_verification_queue:
                            binding_keys: [email_verification]

            email_notification_amqp:
                dsn: "%env(MESSENGER_TRANSPORT_DSN)%"
                serializer: messenger.transport.symfony_serializer
                failure_transport: dead_letter_amqp # Route failures to dead_letter_amqp
                retry_strategy:
                    max_retries: 1
                    delay: 1000
                    multiplier: 2
                    max_delay: 0
                options:
                    exchange:
                        name: email_exchange # Use the same email exchange
                        type: direct
                    queues:
                        email_notification_queue:
                            binding_keys: [email_notification]
                            arguments:
                                "x-max-priority": 2

        # Routing: Messages are routed to specific transports
        routing:
            'App\Message\CompetitionSubmittionMessage': submission_amqp
            'App\Message\WinnerTriggerMessage': competition_status_amqp
            'App\Message\CompetitionUpdateStatusMessage': competition_status_amqp
            'App\Message\VerificationEmailMessage': email_verification_amqp 
            'App\Message\EmailNotificationMessage': email_notification_amqp 

# when@test:
#    framework:
#        messenger:
#            transports:
#                # replace with your transport name here (e.g., my_transport: 'in-memory://')
#                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'
